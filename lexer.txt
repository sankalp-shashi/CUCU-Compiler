INT : int
ID : main
LPAR : (
RPAR : )
LBRACE : {
INT : int
ID : a
EOS : ;
INT : int
ID : b
EOS : ;
INT : int
ID : c
EOS : ;
INT : int
ID : discriminant
EOS : ;
INT : int
ID : root1
EOS : ;
INT : int
ID : root2
EOS : ;
INT : int
ID : realPart
EOS : ;
INT : int
ID : imagPart
EOS : ;
ID : discriminant
EQUALS : =
ID : b
MUL : *
ID : b
MINUS : -
INT_LIT : 4
MUL : *
ID : a
MUL : *
ID : c
EOS : ;
IF : if
LPAR : (
ID : discriminant
NOT_EQUALS : !=
INT_LIT : 0
RPAR : )
LBRACE : {
ID : root1
EQUALS : =
LPAR : (
ID : b
PLUS : +
ID : discriminant
RPAR : )
DIV : /
LPAR : (
INT_LIT : 2
MUL : *
ID : a
RPAR : )
EOS : ;
ID : root2
EQUALS : =
LPAR : (
ID : b
MINUS : -
ID : discriminant
RPAR : )
DIV : /
LPAR : (
INT_LIT : 2
MUL : *
ID : a
RPAR : )
EOS : ;
RBRACE : }
ELSE : else
LBRACE : {
IF : if
LPAR : (
ID : discriminant
DOUBLE_EQUALS : ==
INT_LIT : 0
RPAR : )
LBRACE : {
ID : root2
EQUALS : =
ID : b
DIV : /
LPAR : (
INT_LIT : 2
MUL : *
ID : a
RPAR : )
EOS : ;
RBRACE : }
ELSE : else
LBRACE : {
ID : realPart
EQUALS : =
ID : b
DIV : /
LPAR : (
INT_LIT : 2
MUL : *
ID : a
RPAR : )
EOS : ;
ID : imagPart
EQUALS : =
ID : discriminant
DIV : /
LPAR : (
INT_LIT : 2
MUL : *
ID : a
RPAR : )
EOS : ;
RBRACE : }
RBRACE : }
RBRACE : }
